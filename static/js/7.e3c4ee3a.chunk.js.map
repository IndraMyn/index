{"version":3,"sources":["Components/CardItemComponent.js"],"names":["CardItemComponent","props","useState","cart","setCart","useContext","AlertContext","alert","setAlert","CheckoutContext","order","setOrder","className","to","id","src","thumbnail","style","maxHeight","width","alt","inline","title","size","color","defaultValue","precision","icon","fontSize","readOnly","onSubmit","e","preventDefault","FormatRupiah","price","onClick","qyt","faDollarSign","outline","status","message","type","faCartPlus","faCheckCircle"],"mappings":"sSAoEeA,UAvDf,SAA2BC,GAAQ,IAAD,EAEAC,oBAAS,GAFT,mBAExBC,EAFwB,KAElBC,EAFkB,OAGAC,qBAAWC,KAHX,mBAGxBC,EAHwB,KAGjBC,EAHiB,OAIAH,qBAAWI,KAJX,mBAIxBC,EAJwB,KAIjBC,EAJiB,KAiB9B,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAMC,UAAU,eACR,kBAAC,IAAD,CAAMC,GAAE,mBAAcZ,EAAMa,IAAMF,UAAU,eACxC,yBAAKG,IAAKd,EAAMe,UAAYC,MAAO,CAACC,UAAW,QAASC,MAAO,QAASC,IAAI,aAEpF,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMC,QAAM,GACR,kBAAC,IAAD,CAAWT,UAAU,WACjB,4BAAKX,EAAMqB,QAEf,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,KAAK,QAAQN,MAAO,CAACO,MAAO,WAAYC,aAAc,EAAGC,UAAW,EAAGC,KAAM,kBAAC,IAAD,CAAcC,SAAS,UAAWC,UAAQ,MAGvI,kBAAC,IAAD,CAAMR,QAAM,EAACS,SAAU,SAAAC,GAAC,OAAIA,EAAEC,mBAC1B,kBAAC,IAAD,CAAWpB,UAAU,WACjB,kBAAC,IAAD,KAAQqB,YAAahC,EAAMiC,MAAO,UAEtC,kBAAC,IAAD,CAAWtB,UAAU,QACjB,kBAAC,IAAD,CAAMC,GAAG,UAAS,kBAAC,IAAD,CAAQW,MAAM,UAAUD,KAAK,KAAKY,QAzB1D,SAACJ,GACD,OAAVrB,GAAgBC,EAAS,MAC7BA,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAACI,GAAI,EAAGQ,MAAO,eAAgBY,MAAO,IAAQE,IAAK,QAuBjC,IAAuD,kBAAC,IAAD,CAAiBT,KAAMU,MAA9E,OAEtB,kBAAC,IAAD,MAEkB,IAATlC,EACD,kBAAC,IAAD,CAAQoB,KAAK,KAAKe,SAAO,EAAC1B,UAAU,oBAAoBuB,QApCjE,SAACJ,GAChBA,EAAEC,iBACF5B,GAASD,GACTK,EAAS,2BAAID,GAAL,IAAYgC,QAAQ,EAAMC,QAAS,qCAAsCC,KAAM,eAiC/D,IAA+E,kBAAC,IAAD,CAAiBd,KAAMe,MAAtG,KACA,kBAAC,IAAD,CAAM7B,GAAG,SAAQ,kBAAC,IAAD,CAAQU,KAAK,KAAKe,SAAO,EAAC1B,UAAU,oBAAoBuB,QAAS,kBAAM3B,EAAS,2BAAID,GAAL,IAAYgC,QAAQ,OAAU,kBAAC,IAAD,CAAiBZ,KAAMgB,YAOzK,kBAAC,IAAD","file":"static/js/7.e3c4ee3a.chunk.js","sourcesContent":["import React, { Fragment, useState, useContext } from 'react'\r\nimport '../Style/CardStyle.css'\r\nimport { Card, CardBody, FormGroup, Form, Label, Button } from 'reactstrap'\r\nimport { Rating } from '@material-ui/lab'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCartPlus, faDollarSign, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from 'react-router-dom'\r\nimport { AlertContext } from '../Context/AlertContext'\r\nimport AlertComponent from './AlertComponent'\r\nimport FormatRupiah from '../Tools/FormatRupiahTool'\r\nimport { CheckoutContext } from '../Context/CheckoutContext'\r\n\r\nfunction CardItemComponent(props) {\r\n\r\n    const[cart, setCart]        = useState(false)\r\n    const[alert, setAlert]      = useContext(AlertContext)\r\n    const[order, setOrder]      = useContext(CheckoutContext)\r\n\r\n    const handleCart = (e) => {\r\n        e.preventDefault()\r\n        setCart(!cart)\r\n        setAlert({...alert, status: true, message: 'Berhasil ditambahkan ke keranjang!', type: 'success'})\r\n    }\r\n\r\n    const handleBuy = (e) => {\r\n        if (order !== null) setOrder(null)\r\n        setOrder([...order, {id: 2, title: 'Bolu Cokelat', price: 100000, qyt: 1}])\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <Card className=\"card-shadow\">\r\n                    <Link to={`/product/${props.id}`} className=\"text-center\">\r\n                        <img src={props.thumbnail}  style={{maxHeight: '180px', width: '100%'}} alt=\"product\" />\r\n                    </Link>\r\n                <CardBody>\r\n                    <Form inline>\r\n                        <FormGroup className=\"mr-auto\">\r\n                            <h4>{props.title}</h4>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Rating size=\"small\" style={{color: '#ff3d47'}} defaultValue={4} precision={1} icon={<FavoriteIcon fontSize=\"small\"/>} readOnly/>\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <Form inline onSubmit={e => e.preventDefault()}>\r\n                        <FormGroup className=\"mr-auto\">\r\n                            <Label>{FormatRupiah(props.price, 'Rp. ')}</Label>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mr-2\">\r\n                            <Link to=\"/order\"><Button color=\"success\" size=\"sm\" onClick={handleBuy}> <FontAwesomeIcon icon={faDollarSign} /> </Button></Link>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            {\r\n                                (cart === false)?\r\n                                <Button size=\"sm\" outline className=\"btn-brown-outline\" onClick={handleCart} > <FontAwesomeIcon icon={faCartPlus} /> </Button>:\r\n                                <Link to=\"/cart\"><Button size=\"sm\" outline className=\"btn-brown-outline\" onClick={() => setAlert({...alert, status: false})} ><FontAwesomeIcon icon={faCheckCircle} /></Button></Link>\r\n                            }\r\n                        </FormGroup>\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n            {/* Alert */}\r\n            <AlertComponent />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CardItemComponent"],"sourceRoot":""}